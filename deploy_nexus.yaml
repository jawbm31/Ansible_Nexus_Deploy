---
- name: install java and net-tools
  hosts: webserver
  tasks: 
   - name: update server repo
      apt: update_cache=yes force_apt_get=true cache_valid_time=3600
   - name: install java and net-tools
      apt:
       pkg:
        - openjdk-8-jre-headless
        - net-tools


- name: download and unpack nexus installer
  hosts: webserver
  tasks:
   - name: download nexus file from web
     get_url:
      url:  https://download.sonatype.com/nexus/3/latest-unix.tar.gz
      dest: /opt/
     register: download_result
   - name : check  nexus folder stats
     stat:
      path: /opt/nexus
     register: stat_result
   - name: untar nexus installer
     unarchive:
      src: "{{download_result.dest}}"
      dest: /opt
      remote_src: yes
     when: not stat_result.stat.exists
    - name: find the file
      find:
       paths: /opt
       patterns: "nexus-*"
       file_type: directory
      register: find_file
    - name: rename nexus folder
      shell: mv {{find_file.files[0].path}} /opt/nexus
      when: not stat_result.stat.exists


- name: create user nexus to own  nexus folder
  hosts: webserver
  tasks:
   - name: add group nexus
     group:
      name: nexus
      state: present
   - name: add user nexus
     user:
      name: nexus
      group: nexus
   - name: make nexus user owner of nexus folder
     file:
      path: /opt/nexus
      state: directory
      recurse: yes
      owner: nexus
      group: nexus
   - name: make nexus user owner of sonartype-work folder
     file:
      path: /opt/sonartype-work
      state: directory
      recurse: yes
      owner: nexus
      group: nexus

- name: start nexus with nexus user
  hosts: webserver
  become: true
  become_user: nexus
  tasks:
   - name: set run_as_user nexus
     lineinfile:
       path: /opt/nexus/bin/nexus.rc
       regexp: '^#runs_as_user=""'
       line: run_as_user="nexus"
   - name: start nexus
     command: /opt/nexus/bin/nexus start


- name:
  hosts: webserver
  tasks:
   - name: check with ps
     shell: ps aux | grep nexus
     register: app_status
   - debug: msg={{app_status.stdout_line}}
   - name: wait one minute
     pause:
      minutes: 1
   - name: check with netstat
     shell: netstat -plnt
     register: app_status
   - debug: msg={{app_status.stdout_line}}




    

     
 